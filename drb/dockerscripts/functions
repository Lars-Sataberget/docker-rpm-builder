# this is meant to be sourced, not executed.

function log {
    echo -e "[$(date --rfc-3339=seconds)]: $*"
}

function verify_environment_prereq {
    [ -z "${CALLING_UID}" ] && { log "Missing CALLING_UID"; /bin/false; }
    [ -z "${CALLING_GID}" ] && { log "Missing CALLING_GID"; /bin/false; }
    [ -z "${BASH_ON_FAIL}" ] && { log "Missing BASH_ON_FAIL. Won't drop into interactive shell if errors are found"; }
    [ -n "${ENABLE_SOURCE_OVERLAY}" ] && { log "Source overlay is unsupported"; /bin/false; }
    return 0
}

function set_variables_from_environment {
    RPMS_DIR="$(rpm --eval %\{_rpmdir\})"
    SRPMS_DIR="$(rpm --eval %\{_srcrpmdir\})"
    SOURCE_DIR="$(rpm --eval %\{_sourcedir\})"
    SPECS_DIR="$(rpm --eval %\{_specdir\})"
    ARCH="$(rpm --eval %\{_arch\})"
}

function setup_rpm_builddeps {
    log "Starting download of dependencies"
    SPECS_DIR="$(rpm --eval %\{_specdir\})"
    SPEC="$(ls "${SPECS_DIR}"/*.spec | head -n 1)"
    yum-builddep -y --nogpgcheck "${SPEC}"
}



function map_uid_gid_to_existing_users {
    #rpmbuild complains if it can't find a proper user for uid/gid of the source files;
    #we should add all uid/gids for source files.
    for gid in $(find ${TOMAP_DIR} | xargs stat -c '%g' | sort | uniq); do
        groupadd -g "$gid" "group$gid" >/dev/null 2>&1 || /bin/true
    done

    for uid in $(find ${TOMAP_DIR} | xargs stat -c '%u' | sort | uniq); do
        useradd -u "$uid" "user$uid" >/dev/null 2>&1 || /bin/true
    done

}
